---
# tasks file for rhel/install-microshift/

- name: Create OC directory if it does not exist
  ansible.builtin.file:
    path: /tmp/oc
    state: directory
    mode: '0755'

- name: Extract OC tarball into /tmp/oc
  ansible.builtin.unarchive:
    src: https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
    dest: /tmp/oc
    remote_src: yes
    list_files: yes

- name: Install OC binaries 
  ansible.builtin.shell: install -t /usr/bin {kubectl,oc}
  args:
    chdir: /tmp/oc

- name: Enable a RHOCP repository
  community.general.rhsm_repository:
    name: rhocp-4.8-for-rhel-8-x86_64-rpms
    state: enabled

- name: Install CRI-O packages
  ansible.builtin.dnf:
    name:
      - cri-o
      - conntrack
      - cri-tools
    state: latest

- name: Enable service CRI-O and ensure it is not masked
  ansible.builtin.systemd:
    name: crio
    state: started
    enabled: yes
    masked: no

- name: Create Microshift manifests directory if it does not exist
  ansible.builtin.file:
    path: /var/lib/microshift/manifests
    state: directory
    mode: '0755'

- name: Copy Microshift manifests into the manifests directory
  ansible.builtin.template:
    dest: "/var/lib/microshift/manifests/{{ item | basename | splitext | first }}"
    group: root
    src: "{{ item }}"
    mode: 0644
  with_fileglob:
    - "templates/*.j2"

- name: Enable project Microshift
  ansible.builtin.shell: dnf copr enable -y @redhat-et/microshift

- name: Install Microshift package
  ansible.builtin.dnf:
    name:
      - microshift
    state: latest

- name: Enable service Microshift and ensure it is not masked
  ansible.builtin.systemd:
    name: microshift
    state: started
    enabled: yes
    masked: no

- name: Waiting on kubeconfig to be available
  ansible.builtin.wait_for:
    path: "{{ kubeadmindir }}/kubeconfig"
    state: present
  vars:
    kubeadmindir: /var/lib/microshift/resources/kubeadmin
 
- name: Download Contour manifest
  ansible.builtin.get_url:
    url: https://projectcontour.io/quickstart/contour.yaml
    dest: /var/lib/microshift/manifests/contour.yaml
    mode: '0664'

- name: Deploy ingress controller with Contour
  block:
    - name: Apply Contour manifest
      kubernetes.core.k8s:
        state: present
        src: /var/lib/microshift/manifests/contour.yaml

    - name: Patch Contour for accept ingress
      kubernetes.core.k8s:
        state: present
        merge_type: merge
        name: envoy
        namespace: projectcontour
        kind: DaemonSet
        api_version: apps/v1
        definition:
          spec:
            template:
              spec:
                nodeSelector:
                  ingress-ready: "true"
  environment:
    KUBECONFIG: /var/lib/microshift/resources/kubeadmin/kubeconfig
