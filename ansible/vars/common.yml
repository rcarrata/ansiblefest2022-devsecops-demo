---
## README
## common.yml - provides the common variables for the lab
## labX.yml   - provides the specific network variables for the lab (for deploy more than 1 lab each time)
## vault.yml  - provides the encrypted vault variables like creds that needs to be protected

##### Subscription Data #####
#subscription_id: encrypted in vault.yml
#secret: encrypted in vault.yml
#client_id: encrypted in vault.yml
#tenant: encrypted in vault.yml

##### Azure Net Infra #####
#main_resgroup: check vars/labx.yml
#main_vnet_name: check vars/labx.yml
#vnet_ip: "check vars/labx.yml
internal_subnet_name: "ansiblefest_{{ lab_name }}_internal_subnet"
#internal_subnet_ip: "check vars/labx.yml
external_subnet_name: "ansiblefest_{{ lab_name }}_external_subnet"
#external_subnet_ip: "check vars/labx.yml
internal_subnet_dmz_name: "ansiblefest_{{ lab_name }}_internal_subnet_dmz"
#internal_subnet_dmz_ip: "check vars/labx.yml
#internal_subnet_ip_first: "check vars/labx.yml"
#internal_subnet_dmz_net: "check vars/labx.yml"
storage_account_name: "ansiblefest2022blob"
storage_container: "ansiblefest2022"
route_table: "ansiblefest_{{ lab_name }}_route_table"
route_table_name: "ansiblefest_{{ lab_name }}_route_table_Internet"

##### Azure CheckPoint SMS #####
sms_resgroup: "ansiblefest_{{ lab_name }}_sms_rg"
cloudGuardVersionsms: "R81.10 - Bring Your Own License"
#adminPasswordsms: stored in vault
authenticationTypesms: "password"
vmNamesms: "chkpsmsansiblefest{{ lab_name }}"
vmSizesms: "Standard_D3_v2"
virtualNetworkNamesms: "{{ main_vnet_name }}"
Subnet1Namesms: "{{ internal_subnet_name }}"
Subnet1Prefixsms: "{{ internal_subnet_ip }}"
#Subnet1StartAddresssms: "check vars/labx.yml"
vnetNewOrExistingsms: "existing"
virtualNetworkExistingRGNamesms: "{{ main_resgroup }}"
managementGUIClientNetworksms: "0.0.0.0/0"
installationTypesms: "management"
allowDownloadFromUploadToCheckPointsms: "true"
additionalDiskSizeGBsms: "0"
diskTypesms: "Standard_LRS"
sourceImageVhdUrisms: "noCustomUri"
template_linksms: "https://raw.githubusercontent.com/CheckPointSW/CloudGuardIaaS/master/azure/templates/marketplace-management/mainTemplate.json"

ckp_resources_blob: "https://{{ storage_account_name }}.blob.core.windows.net/{{ storage_container }}"
ckp_deployagent_blob: "{{ ckp_resources_blob }}/{{ deployagent_pkg }}"
deployagent_pkg: "DeploymentAgent_000001959_1.tgz"

#https://ansiblefest2020blob.blob.core.windows.net/ansiblefest2020/DeploymentAgent_000001959_1.tgz

ckp_jumbohotfix_blob: "{{ ckp_resources_blob }}/{{ jumbohotfix_pkg }}"
jumbohotfix_pkg: "Check_Point_R80_30_JUMBO_HF_Bundle_T217_sk153152_Security_Management_3_10_FULL.tgz"

##### Azure CheckPoint Gateway #####
gw_resgroup: "ansiblefest_{{ lab_name }}_gw_rg"
cloudGuardVersiongw: "R81.10 - Bring Your Own License"
#adminPasswordgw: stored in vault
authenticationTypegw: "password"
vmNamegw: "chkpgwansiblefest{{ lab_name }}"
vmSizegw: "Standard_D3_v2"
#sicKeyGW: stored in vault
virtualNetworkNamegw: "{{ main_vnet_name }}"
Subnet1Namegw: "{{ external_subnet_name }}"
Subnet1Prefixgw: "{{ external_subnet_ip }}"
#Subnet1StartAddressgw: "check vars/labx.yml"
Subnet2Namegw: "{{ internal_subnet_name }}"
Subnet2Prefixgw: "{{ internal_subnet_ip }}"
#Subnet2StartAddressgw: "check vars/labx.yml"
vnetNewOrExistinggw: "existing"
virtualNetworkExistingRGNamegw: "{{ main_resgroup }}"
allowDownloadFromUploadToCheckPointgw: "true"
additionalDiskSizeGBgw: "0"
diskTypegw: "Standard_LRS"
sourceImageVhdUrigw: "noCustomUri"
template_linkgw: "https://raw.githubusercontent.com/CheckPointSW/CloudGuardIaaS/master/azure/templates/marketplace-single/mainTemplate.json"

##### CheckPoint Add Simple Gateway Vars #####
simple_gw_comments: "gw_rg01"
simple_gw_anti_bot: true
simple_gw_anti_virus: true
simple_gw_appi_ctrl: true
simple_gw_color: "blue"
simple_gw_firewall: true
simple_gw_ips: true
simple_gw_sickey: "vpn123"
simple_gw_threat_emulation: false
simple_gw_url_filtering: true
simple_gw_gw_version: "R81.10"
simple_gw_eth0_color: "red"
simple_gw_eth0_comments: "Leads to Internet"
# simple_gw_eth0_ipv4: "192.168.233.104"
simple_gw_eth0_ipv4_network_mask: "255.255.255.0"
simple_gw_eth0_anti_spoofing: true
simple_gw_eth0_topology: "External"
simple_gw_eth0_security_zone: true
simple_gw_eth0_specific_zone: "ExternalZone"
simple_gw_eth1_color: "sea green"
simple_gw_eth1_comments: "Leads to Web Frontend"
# simple_gw_eth1_ipv4: "10.101.1.4"
simple_gw_eth1_ipv4_network_mask: "255.255.255.0"
simple_gw_eth1_anti_spoofing: true
simple_gw_eth1_topology: "Internal"
simple_gw_eth1_topology_ip_behind_if: "network defined by the interface ip and net mask"
simple_gw_eth1_security_zone: true
simple_gw_eth1_specific_zone: "InternalZone"

##### Azure VM Win10 #####
win10_resgroup: "ansiblefest_{{ lab_name }}_w10_rg"
win10_net_seg_group: "nsg1_{{ lab_name }}"
win10_public_ip: "win10_ip_{{ lab_name }}"
win10_nic: "win10_nic_{{ lab_name }}"
win10_private_nic: "win10_private_nic_{{ lab_name }}"
#win10_private_ip: "check vars/labx.yml"

win10_vm_size: "Standard_DS2_v2"
win10_vm_name: "w10{{ lab_name }}"
win10_username: azureuser

win10_offer: "Windows-10"
win10_publisher: "MicrosoftWindowsDesktop"
win10_sku: "win10-21h2-pro"
win10_version: "19044.1889.220805" # Updated

win10_blob: "https://{{ storage_account_name }}.blob.core.windows.net/{{ storage_container }}/{{ win10_ckp_smartconsole }}"
win10_ckp_smartconsole: Check_Point_SmartConsole_R81_10_jumbo_HF_B409_Win_portable.zip

##### Azure VM AAP Controller #####
tower_public_ip: "tower_ip_{{ lab_name }}"
tower_net_seg_group: "tower_nsg1_{{ lab_name }}"
tower_nic: "tower_nic_{{ lab_name }}"
tower_private_nic: "tower_private_nic_{{ lab_name }}"
#tower_private_ip: "check vars/labx.yml"

tower_vm_size: "Standard_D3_v2"
tower_vm_name: "tower{{ lab_name }}"
tower_user: azureuser

tower_offer: "RHEL"
tower_publisher: "RedHat"
tower_sku: "8_6"
tower_version: "8.6.2022070801" # Updated

aap_setup_down_dest_dir: "/tmp"
aap_setup_prep_working_dir: "/tmp"
aap_setup_down_type: "setup"

aap_setup_prep_inv_nodes:
  automationcontroller:
  database:

##### RHEL1 #####
rhel_resgroup: "ansiblefest_{{ lab_name }}_rhel_rg"
rhel_net_seg_group: "rhel_nsg_{{ lab_name }}"
rhel_vm_size: "Standard_DS1_v2"
rhel_username: azureuser

rhel_offer: "RHEL"
rhel_publisher: "RedHat"
rhel_sku: "8_6"
rhel_version: "8.6.2022070801"

##### Ansible Automation Platform Configuration
aap_host: "https://{{ aap_vault_host }}"
aap_user: admin
aap_pass: "{{ aap_vault_password }}"

organizations: []

teams: []

users: []

admin_users: []

auditor_users: []

inventories:
  - name: "Automation Controller Inventory"
    desc: "Automation Controller Inventory"
    org: "Default"
  - name: w10
    desc: "w10"
    org: Default
  - name: rhel1
    desc: "rhel1"
    org: Default
  - name: rhel2
    desc: "rhel2"
    org: Default
  - name: ckp-sms
    desc: "ckp-sms"
    org: Default
  - name: ckp-gw
    desc: "ckp-gw"
    org: Default

hosts:
  - name: localhost
    desc: ""
    inv: "Automation Controller Inventory"
    vars:
      {
        "ansible_connection": "local",
        "ansible_python_interpreter": "{{ ansible_playbook_python }}",
      }
  - name: w10
    desc: ""
    inv: "w10"
    vars: { "ansible_host": "{{ win10_private_ip }}" }
  - name: rhel1
    desc: ""
    inv: "rhel1"
    vars: { "ansible_host": "{{ rhel1_private_ip }}" }
  - name: rhel2
    desc: ""
    inv: "rhel2"
    vars: { "ansible_host": "{{ rhel2_private_ip }}" }
  - name: ckp-sms
    desc: ""
    inv: "ckp-sms"
    vars:
      {
        "ansible_host": "{{ Subnet1StartAddresssms }}",
        "ansible_user": "admin",
      }
  - name: ckp-gw
    desc: ""
    inv: "ckp-gw"
    vars:
      { "ansible_host": "{{ Subnet2StartAddressgw }}", "ansible_user": "admin" }

execution_enviroment:
  - name: "AnsibleFest Execution Environment"
    desc: "quay.io/ansiblefest2022/ee-ansiblefest-image:1.0.0"

scm_custom_credential_types: []

scm_credentials:
  - name: "Red Hat Ansible Automation Platform Credential"
    desc: "Red Hat Ansible Automation Platform Credential"
    org: Default
    type: "Red Hat Ansible Automation Platform"
    inputs:
      host: "https://{{ aap_host }}"
      username: "{{ aap_user }}"
      password: "{{ aap_pass }}"
  - name: "Vault"
    desc: "Vault"
    org: Default
    type: "Vault"
    inputs:
      vault_password: "{{ vault_password }}"
  - name: "azure_creds"
    desc: "azure_creds"
    org: Default
    type: "Microsoft Azure Resource Manager"
    inputs:
      client: "{{ client_id }}"
      secret: "{{ secret }}"
      tenant: "{{ tenant }}"
      subscription: "{{ subscription_id }}"
  - name: "Source Control"
    desc: "Source Control"
    org: Default
    type: "Source Control"
    inputs:
      username: "{{ github_username }}"
      ssh_key_data: "{{ ssh_key_data }}"
  - name: "VMKey"
    desc: "VMKey Machine"
    org: Default
    type: "Machine"
    inputs:
      username: "azureuser"
      password: "{{ password }}"
      become_method: sudo
  - name: "VMGW"
    desc: "VMGW Machine"
    org: Default
    type: "Machine"
    inputs:
      username: "admin"
      password: "{{ password }}"

scm_projects:
  - name: "AnsibleFest2022 DevSecOps Project"
    desc: "AnsibleFest2022 DevSecOps Project"
    org: Default
    git_url: "https://github.com/rcarrata/ansiblefest2022-devsecops-demo.git"
    git_branch: main
    git_cred: ""

scm_jobtemplates:
  - name: "Lab2_deploy_win10_vm"
    desc: "deploy_win10_vm"
    org: Default
    inv: "Automation Controller Inventory"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/deploy_win10_vm.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "azure_creds"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab2_deploy_ckp_gw"
    desc: "lab2_deploy_ckp_gw"
    org: Default
    inv: "Automation Controller Inventory"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/deploy_ckp_gw.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "azure_creds"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab2_deploy_ckp_sms"
    desc: "lab2_deploy_ckp_sms"
    org: Default
    inv: "Automation Controller Inventory"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/deploy_ckp_sms.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "azure_creds"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab2_deploy_rhel_vm"
    desc: "lab2_deploy_rhel_vm"
    org: Default
    inv: "Automation Controller Inventory"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/deploy_rhel_vm.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "azure_creds"
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab3_config_win10_vm"
    desc: "Lab3_config_win10_vm"
    org: Default
    inv: "w10"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_win10_vm.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab3_config_ckp_jumbo_hotfix"
    desc: "lab3_config_ckp_jumbo_hotfix"
    org: Default
    inv: "ckp-sms"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_ckp_jumbo_hotfix.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "Ansible Engine 2.9 execution environment"
  - name: "Lab3_config_ckp_setting_api_sms"
    desc: "lab4_config_ckp_setting_api_sms"
    org: Default
    inv: "ckp-sms"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_ckp_setting_api_sms.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "Ansible Engine 2.9 execution environment"
  - name: "Lab3_config_add_simple_gw"
    desc: "Lab4_config_add_simple_gw"
    org: Default
    inv: "ckp-sms"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_ckp_add_simple_gw.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "Ansible Engine 2.9 execution environment"
  - name: "Lab3_config_ckp_add_route_default_gw"
    desc: "Lab3_config_ckp_add_route_default_gw"
    org: Default
    inv: "ckp-gw"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_ckp_add_route_default_gw.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMGW"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "Ansible Engine 2.9 execution environment"
  - name: "Lab4_config_ckp_sec_hosts"
    desc: "Lab4_config_ckp_sec_hosts"
    org: Default
    inv: "ckp-sms"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_ckp_sec_hosts.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "Ansible Engine 2.9 execution environment"
  - name: "Lab4_config_ckp_sec_policies"
    desc: "Lab4_config_ckp_sec_policies"
    org: Default
    inv: "ckp-sms"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_ckp_sec_policies.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "Ansible Engine 2.9 execution environment"
  - name: "Lab4_app_deploy_jboss_server"
    desc: "Lab5_app_deploy_jboss_server"
    org: Default
    inv: "rhel1"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/app_deploy_jboss.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab4_deploy_k8s"
    desc: "Lab5_deploy_k8s"
    org: Default
    inv: "rhel2"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/app_deploy_k8s.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab4_deploy_app_ticketmonster"
    desc: "Lab4_deploy_app_ticketmonster"
    org: Default
    inv: "rhel1"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/app_deploy_app_ticket.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab4_app_deploy_etherpad_k8s"
    desc: "Lab4_app_deploy_etherpad_k8s"
    org: Default
    inv: "rhel2"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/app_deploy_etherpad_k8s.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab4_config_azure_route_table_for_apps"
    desc: "Lab4_config_azure_route_table_for_apps"
    org: Default
    inv: "Automation Controller Inventory"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_ckp_add_route_table.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
      - "azure_creds"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab5_deploy_nat_rules_for_apps"
    desc: "Lab5_deploy_nat_rules_for_apps"
    org: Default
    inv: "ckp-sms"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/config_ckp_nat_rules.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "Ansible Engine 2.9 execution environment"
  - name: "Lab99_re_deploy_ckp_sms"
    desc: "Lab99_re_deploy_ckp_sms"
    org: Default
    inv: "Automation Controller Inventory"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/re_deploy_ckp_sms.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "azure_creds"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"
  - name: "Lab99_delete_azure_infra"
    desc: "Lab99_delete_azure_infra"
    org: Default
    inv: "Automation Controller Inventory"
    project: "AnsibleFest2022 DevSecOps Project"
    playbook: "ansible/destroy_azure_infra.yml"
    extra_vars: { "lab_name": "{{ lab_name }}" }
    creds:
      - "azure_creds"
      - "VMKey"
      - "Vault"
    ask_variables_on_launch: no
    execution_environment: "AnsibleFest Execution Environment"

scm_jobtemplates_survey: []

scm_workflowjobtemplates:
  - name: Lab2_Workflow_deploy_azure_ciberinfra
    desc: Deploy Azure Cybersec Environment
    org: Default
    inv: ""
    steps:
      - identifier: "Lab2_deploy_win10_vm"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab2_deploy_win10_vm
          type: job_template
        credentials: []
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab2_deploy_ckp_sms"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab2_deploy_ckp_sms
          type: job_template
        credentials: []
        related:
          success_nodes:
            - identifier: Lab2_deploy_ckp_gw
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab2_deploy_rhel_vm"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab2_deploy_rhel_vm
          type: job_template
        credentials: []
        related:
          success_nodes:
            - identifier: Lab2_deploy_ckp_gw
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab2_deploy_ckp_gw"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab2_deploy_ckp_gw
          type: job_template
        credentials: []
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
          credentials: []
  - name: Lab3_1_Workflow_config_sms_checkpoint_environment
    desc: Config Checkpoint Environment
    org: Default
    inv: ""
    steps:
      - identifier: "Lab3_config_ckp_jumbo_hotfix"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab3_config_ckp_jumbo_hotfix
          type: job_template
        credentials: []
        related:
          success_nodes:
            - identifier: Lab3_config_ckp_setting_api_sms
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab3_config_ckp_setting_api_sms"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab3_config_ckp_setting_api_sms
          type: job_template
        credentials: []
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
          credentials: []
  - name: Lab3_2_Workflow_config_gw_to_checkpoint_environment
    desc: Config Checkpoint Environment
    org: Default
    inv: ""
    steps:
      - identifier: "Lab3_config_add_simple_gw"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab3_config_add_simple_gw
          type: job_template
        credentials: []
        related:
          success_nodes:
            - identifier: Lab3_config_ckp_add_route_default_gw
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab3_config_ckp_add_route_default_gw"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab3_config_ckp_add_route_default_gw
          type: job_template
        credentials: []
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
          credentials: []
  - name: Lab4_1_Deploy_Applications_to_rhel_servers
    desc: Deploy Jboss and K8S apps to the rhel servers
    org: Default
    inv: ""
    steps:
      - identifier: "Lab4_app_deploy_jboss_server"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab4_app_deploy_jboss_server
          type: job_template
        credentials: []
        related:
          success_nodes:
            - identifier: Lab4_deploy_app_ticketmonster
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab4_deploy_app_ticketmonster"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab4_deploy_app_ticketmonster
          type: job_template
        credentials: []
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab4_deploy_k8s"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab4_deploy_k8s
          type: job_template
        credentials: []
        related:
          success_nodes:
            - identifier: Lab4_app_deploy_etherpad_k8s
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab4_app_deploy_etherpad_k8s"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab4_app_deploy_etherpad_k8s
          type: job_template
        credentials: []
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
          credentials: []
  - name: Lab4_2_Workflow_deploy_security_policies
    desc: Deploy Security Policies
    org: Default
    inv: ""
    steps:
      - identifier: "Lab4_config_ckp_sec_hosts"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab4_config_ckp_sec_hosts
          type: job_template
        credentials: []
        related:
          success_nodes:
            - identifier: Lab4_config_ckp_sec_policies
          failure_nodes: []
          always_nodes: []
          credentials: []
      - identifier: "Lab4_config_ckp_sec_policies"
        all_parents_must_converge: false
        unified_job_template:
          organization:
            name: Default
          name: Lab4_config_ckp_sec_policies
          type: job_template
        credentials: []
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
          credentials: []

scm_workflowjobtemplates_webhook: []

scm_workflowjobtemplates_survey: []
